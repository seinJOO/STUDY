- Reactivity
    - 뷰가 가장 중요시하는 중심 사상이자 핵심 기능
    - 데이터의 변화를 뷰에서 감지해서 화면에 반영하는 것
    - 화면 조작에 대한 API라던지 속성들을 뷰에서 제공
- 인스턴스
    - 뷰로 개발할 때 필수로 생성해야하는 단위이자,
    - 실제로 인스턴스 안에 내용들을 추가함으로서 화면 조작 가능
- 컴포넌트
    - 화면의 영역을 구별해서 개발하는 방식
    - 컴포넌트의 개발이 웹 프레임워크에서 가장 중요한 개념
    - 대부분의 UI가 컴포넌트 기반으로 개발되고 있고, 재사용성이 핵심
- 컴포넌트 통신
    컴포넌트로 개발을 했을 때 데이터의 흐름을 제어하기 위한 데이터 규칙들을 제한
    제한하면서 생기는 이점 : 여러 개발자가 함께 개발하더라도 서로 데이터 흐름을 예측할 수 있음
    - props : 상위 -> 하위
    - event emit : 하위 -> 상위
- HTTP 통신 라이브러리 (axios)
    - axios가 가장 대중적으로 쓰임
- 템플릿 문법
    화면을 조작하기 위한 뷰의 문법들
    - 데이터 바인딩 : reactivity와 비슷한 개념. 데이터의 변화를 감지하고 화면에 엮어내는 것
    - 뷰 디렉티브 : 화면을 조작하기 위해 뷰가 추가적으로 제공하는 문법 (v-...)
- Vue CLI
    프로젝트를 명령어로 생성하는 방법
- 싱글 파일 컴포넌트 (.vue 파일)